#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
const int N =120;
const int n = 6;//物品总数
int c = 30;//总空间

//v和w都要初始化v[0]=w[0]=0,使得第1个物品的重量和价值能够用得上
int w[N] = { 0, 1, 7, 6, 14, 12 };//重量
int v[N] = { 0, 2, 5, 5, 14, 9 };//价值



//二维数组做为形参，应该传递一个数组指针，并且指明列数
void backbag( int v[],int w[],int (*x)[N],int c,int n){
	for (int i = 1; i <=n; ++i){
		for (int j = 1; j <=c; ++j){
			if (j < w[i]) x[i][j] = x[i - 1][j];
			else
			{
				x[i][j] =max(x[i - 1][j - w[i]] + v[i], x[i - 1][j]);//若要求得装哪几个可以在此处设置标志flag[n]
			}
		}
	}
	for (int i = 1; i <= n; ++i){
		for (int j = 1; j <= c; ++j)cout << x[i][j]<<" ";//输出每一行，最后一个为最大价值
		cout << endl;
	}
}
int main(){
	int x[N][N];
	memset(x, 0, sizeof(x));
	backbag(v,w,x,c,n);
	system("pause");
}

